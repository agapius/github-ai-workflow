name: OpenAI Code Review Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  openai_code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get PR diff
        id: diff
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          git diff origin/${{ github.base_ref }}...HEAD > pr_diff.txt
      
          echo "DIFF<<EOF" >> $GITHUB_ENV
          cat pr_diff.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Call OpenAI API
        id: openai
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DIFF: ${{ env.DIFF }}
        run: |
          PROMPT=$(printf '%s\n' "You are a senior Python code reviewer. Review this code diff thoroughly." \
          "Tasks:" \
          "1. Look for bugs or logical issues in the code." \
          "2. Ensure all Python functions have docstrings that begin with \"This function will ...\"." \
          "3. If everything is perfect, respond with only PASS (all caps)." \
          "4. Otherwise, provide specific and concise suggestions.")
          
          BODY=$(jq -n --arg diff "${DIFF}" --arg prompt "$PROMPT" '{
            model: "gpt-3.5-turbo",
            messages: [
              { "role": "system", "content": $prompt },
              { "role": "user", "content": $diff }
            ]
          }')
          
          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "$BODY")
          
          echo "$RESPONSE" > response.json
          
          ERROR_MSG=$(jq -r '.error.message // empty' response.json)
          if [[ -n "$ERROR_MSG" ]]; then
            echo "::error::OpenAI API error: $ERROR_MSG"
            exit 1
          fi
          
          SUGGESTIONS=$(jq -r '.choices[0].message.content' response.json)
          
          echo "SUGGESTIONS<<EOF" >> $GITHUB_ENV
          echo "$SUGGESTIONS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
